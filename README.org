This is a template for solving [[https://adventofcode.com/][Advent of Code]] in [[https://julialang.org/][Julia]].

* Using the template
If you just want to use the template without modifying anything, just run
#+begin_src sh
  ./generate-new-year
#+end_src
This will insert the name of the current year and your name (taken from git) everywhere it is needed.
It will also stage the removal of all template and generation files in git.
Simply
#+begin_src sh
  git commit
#+end_src
and you are ready to start committing your solutions.

** Workflow
The intended workflow is to work in a text editor and the Julia REPL.

The solutions for day ~XX~ go in the functions ~star1~ and ~star2~ in the day's file (~src/DayXX.jl~).
These functions are meant to take an I/O stream as input, and by default read the standard input (you end any input you put in with ~Ctrl-d~).
If you want to input the contents of a file, just pass the file name as an argument.
If you want to input a string, wrap it in an [[https://docs.julialang.org/en/v1/base/io-network/#Base.IOBuffer][IOBuffer]].

To run the solutions, start the REPL with the project environment by executing
#+begin_src sh
  julia --project
#+end_src
and then run
#+begin_src julia
  using AdventOfCode<year>.DayXX
#+end_src
to load the functions and variables of day ~XX~ (where ~<year>~ matches that of your package).

Files with the input data for a given day should go in ~data/dayXX.input~, and can be accessed easily by using the variable ~input_file~ in each day-module.
So, to run both stars' solutions on the input data, run
#+begin_src julia
  star1(input_file)
  star2(input_file)
#+end_src
after loading the right day-module.

*** Automated testing of hints
Most Advent of Code problems provide one or more hints.
Testing if your solution solves those hints can be automated by adding them to ~test_hints_star1~ and ~test_hints_star2~.
These functions are exported when you run ~using DayXX~, and are meant to be run directly from the REPL.

*** Testing all solutions
To see your progression across all the year's stars, the hint-tests can be tested together using [[https://docs.julialang.org/en/v1/stdlib/Test/#Workflow-for-Testing-Packages][Julia's built in testing framework]].
Additionally, the final answers to stars can added to these tests by writing the answer to ~data/dayXX.ansY~, where ~Y~ is the star.

To run the full test suite, run
#+begin_src
  pkg> test
#+end_src
in [[https://docs.julialang.org/en/v1/stdlib/REPL/#Pkg-mode][Pkg mode]].

* Modifying the template
When experimenting with modifications, you can use
#+begin_src sh
  ./generate-new-year -s
#+end_src
to generate the necessary Julia files without deleting the templates and generation scripts.

If you want to change the default contents for each day's solution, modify ~src/Day01.jl~ and then use ~generate-day-files~ to create the rest of the day templates.
